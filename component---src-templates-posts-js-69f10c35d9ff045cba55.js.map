{"version":3,"file":"component---src-templates-posts-js-69f10c35d9ff045cba55.js","mappings":"oPAqFA,UA3EcA,IAA4B,IAA3B,KAAEC,EAAI,YAAEC,GAAaF,EAClC,MAAMG,EAAQF,EAAKG,kBAAkBC,OAC/B,gBAAEC,EAAe,SAAEC,GAAaL,EAChCM,EAAkC,IAApBF,EACpB,IAAIG,EACAC,EAEJ,IACED,EAAeN,EAAM,GAAGQ,IAC1B,CAAE,MAAOC,GACPH,EAAe,IACjB,CACA,IACEC,EAAUP,EAAM,GAAGQ,KAAKE,UAAUC,MAAMC,GAC1C,CAAE,MAAOH,GACPF,EAAU,IACZ,CAEA,OACEM,EAAAA,EAAAA,IAACC,EAAAA,EAAM,MACLD,EAAAA,EAAAA,IAACE,EAAAA,EAAG,CAACC,MAAOC,IAAUb,GAAWc,MAAOX,KACxCM,EAAAA,EAAAA,IAACM,EAAAA,EAAS,KACPd,GACCQ,EAAAA,EAAAA,IAACO,EAAAA,EAAQ,MACPP,EAAAA,EAAAA,IAACQ,EAAAA,GAAIC,EAAAA,EAAAA,GAAA,GAAKhB,EAAY,CAAEiB,UAAQ,EAACnB,SAAUA,KAC1CJ,EAAMwB,MAAM,GAAGC,KAAIC,IAAA,IAAGlB,KAAMmB,GAAMD,EAAA,OACjCb,EAAAA,EAAAA,IAACQ,EAAAA,GAAIC,EAAAA,EAAAA,GAAA,CAACM,IAAKD,EAAKE,IAAQF,EAAI,CAAEvB,SAAUA,IAAY,MAIxDS,EAAAA,EAAAA,IAACO,EAAAA,EAAQ,KACNpB,EAAMyB,KAAIK,IAAA,IAAGtB,KAAMmB,GAAMG,EAAA,OACxBjB,EAAAA,EAAAA,IAACQ,EAAAA,GAAIC,EAAAA,EAAAA,GAAA,CAACM,IAAKD,EAAKE,IAAQF,EAAI,CAAEvB,SAAUA,IAAY,OAK5DS,EAAAA,EAAAA,IAACkB,EAAAA,EAAU,CAACC,QAASjC,IACd,C","sources":["webpack://swalloow.github.io/./src/templates/posts.js"],"sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport CardList from '../components/CardList'\nimport Card from '../components/Card'\nimport Container from '../components/Container'\nimport Pagination from '../components/Pagination'\nimport SEO from '../components/SEO'\nimport { startCase } from 'lodash'\n\nconst Posts = ({ data, pageContext }) => {\n  const posts = data.allContentfulPost.edges\n  const { humanPageNumber, basePath } = pageContext\n  const isFirstPage = humanPageNumber === 1\n  let featuredPost\n  let ogImage\n\n  try {\n    featuredPost = posts[0].node\n  } catch (error) {\n    featuredPost = null\n  }\n  try {\n    ogImage = posts[0].node.heroImage.ogimg.src\n  } catch (error) {\n    ogImage = null\n  }\n\n  return (\n    <Layout>\n      <SEO title={startCase(basePath)} image={ogImage} />\n      <Container>\n        {isFirstPage ? (\n          <CardList>\n            <Card {...featuredPost} featured basePath={basePath} />\n            {posts.slice(1).map(({ node: post }) => (\n              <Card key={post.id} {...post} basePath={basePath} />\n            ))}\n          </CardList>\n        ) : (\n          <CardList>\n            {posts.map(({ node: post }) => (\n              <Card key={post.id} {...post} basePath={basePath} />\n            ))}\n          </CardList>\n        )}\n      </Container>\n      <Pagination context={pageContext} />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($skip: Int!, $limit: Int!) {\n    allContentfulPost(\n      sort: { fields: [publishDate], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          title\n          id\n          slug\n          publishDate(formatString: \"MMMM DD, YYYY\")\n          heroImage {\n            title\n            gatsbyImageData(width: 1800, placeholder: BLURRED)\n            ogimg: resize(width: 1800) {\n              src\n            }\n          }\n          body {\n            childMarkdownRemark {\n              timeToRead\n              html\n              excerpt(pruneLength: 80)\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Posts\n"],"names":["_ref","data","pageContext","posts","allContentfulPost","edges","humanPageNumber","basePath","isFirstPage","featuredPost","ogImage","node","error","heroImage","ogimg","src","___EmotionJSX","Layout","SEO","title","_startCase","image","Container","CardList","Card","_extends","featured","slice","map","_ref2","post","key","id","_ref3","Pagination","context"],"sourceRoot":""}