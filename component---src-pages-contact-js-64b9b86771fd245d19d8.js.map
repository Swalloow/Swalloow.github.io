{"version":3,"sources":["webpack:///./src/components/ContactForm.js","webpack:///./src/pages/contact.js"],"names":["Form","props","theme","sizes","maxWidthCentered","colors","tertiary","text","overlay","Name","responsive","small","Email","Message","Submit","highlight","Modal","visible","Button","encode","data","Object","keys","map","key","encodeURIComponent","join","ContactForm","handleInputChange","event","target","value","name","setState","handleSubmit","fetch","method","headers","body","state","then","handleSuccess","catch","error","alert","preventDefault","email","message","showModal","closeModal","render","onSubmit","this","data-netlify","data-netlify-honeypot","onClick","type","hidden","onChange","placeholder","required","React","Component","Contact","Layout","SEO","title","description","Container","PageTitle"],"mappings":"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","file":"component---src-pages-contact-js-64b9b86771fd245d19d8.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\n/*\n  ⚠️ This is an example of a contact form powered with Netlify form handling.\n  Be sure to review the Netlify documentation for more information:\n  https://www.netlify.com/docs/form-handling/\n*/\n\nconst Form = styled.form`\n  max-width: ${props => props.theme.sizes.maxWidthCentered};\n  margin: 0 auto;\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-between;\n  align-items: flex-start;\n  input,\n  textarea {\n    font-family: inherit;\n    font-size: inherit;\n    background: ${props => props.theme.colors.tertiary};\n    color: ${props => props.theme.colors.text};\n    border-radius: 2px;\n    padding: 1em;\n    &::-webkit-input-placeholder {\n      color: gray;\n    }\n    &::-moz-placeholder {\n      color: gray;\n    }\n    &:-ms-input-placeholder {\n      color: gray;\n    }\n    &:-moz-placeholder {\n      color: gray;\n    }\n    &:required {\n      box-shadow: none;\n    }\n  }\n  &::before {\n    content: '';\n    background: black;\n    height: 100%;\n    width: 100%;\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: 1;\n    transition: 0.2s all;\n    opacity: ${props => (props.overlay ? '.8' : '0')};\n    visibility: ${props => (props.overlay ? 'visible' : 'hidden')};\n  }\n`\n\nconst Name = styled.input`\n  margin: 0 0 1em 0;\n  width: 100%;\n  @media (min-width: ${props => props.theme.responsive.small}) {\n    width: 49%;\n  }\n`\n\nconst Email = styled.input`\n  margin: 0 0 1em 0;\n  width: 100%;\n  @media (min-width: ${props => props.theme.responsive.small}) {\n    width: 49%;\n  }\n`\n\nconst Message = styled.textarea`\n  width: 100%;\n  margin: 0 0 1em 0;\n  line-height: 1.6;\n  min-height: 250px;\n  resize: vertical;\n`\n\nconst Submit = styled.input`\n  background: ${props => props.theme.colors.text} !important;\n  color: white !important;\n  cursor: pointer;\n  transition: 0.2s;\n  &:hover {\n    background: ${props => props.theme.colors.highlight} !important;\n  }\n`\n\nconst Modal = styled.div`\n  background: white;\n  padding: 2em;\n  border-radius: 2px;\n  position: fixed;\n  min-width: 75%;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  margin: 0 auto;\n  z-index: 99;\n  display: flex;\n  flex-flow: column;\n  align-items: flex-start;\n  transition: 0.2s all;\n  opacity: ${props => (props.visible ? '1' : '0')};\n  visibility: ${props => (props.visible ? 'visible' : 'hidden')};\n  @media screen and (min-width: ${props => props.theme.responsive.small}) {\n    min-width: inherit;\n    max-width: 400px;\n  }\n  p {\n    line-height: 1.6;\n    margin: 0 0 2em 0;\n  }\n`\n\nconst Button = styled.div`\n  background: ${props => props.theme.colors.text};\n  font-size: 1em;\n  display: inline-block;\n  margin: 0 auto;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  color: white;\n  padding: 1em;\n  border-radius: 2px;\n  text-decoration: none;\n  transition: 0.2s;\n  z-index: 99;\n  &:focus {\n    outline: none;\n  }\n  &:hover {\n    background: ${props => props.theme.colors.highlight};\n  }\n`\n\nconst encode = data => {\n  return Object.keys(data)\n    .map(key => encodeURIComponent(key) + '=' + encodeURIComponent(data[key]))\n    .join('&')\n}\n\nclass ContactForm extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      name: '',\n      email: '',\n      message: '',\n      showModal: false,\n    }\n  }\n\n  handleInputChange = event => {\n    const target = event.target\n    const value = target.value\n    const name = target.name\n    this.setState({\n      [name]: value,\n    })\n  }\n\n  handleSubmit = event => {\n    fetch('/?no-cache=1', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n      body: encode({ 'form-name': 'contact', ...this.state }),\n    })\n      .then(this.handleSuccess)\n      .catch(error => alert(error))\n    event.preventDefault()\n  }\n\n  handleSuccess = () => {\n    this.setState({\n      name: '',\n      email: '',\n      message: '',\n      showModal: true,\n    })\n  }\n\n  closeModal = () => {\n    this.setState({ showModal: false })\n  }\n\n  render() {\n    return (\n      <Form\n        name=\"contact\"\n        onSubmit={this.handleSubmit}\n        data-netlify=\"true\"\n        data-netlify-honeypot=\"bot\"\n        overlay={this.state.showModal}\n        onClick={this.closeModal}\n      >\n        <input type=\"hidden\" name=\"form-name\" value=\"contact\" />\n        <p hidden>\n          <label>\n            Don’t fill this out:{' '}\n            <input name=\"bot\" onChange={this.handleInputChange} />\n          </label>\n        </p>\n\n        <Name\n          name=\"name\"\n          type=\"text\"\n          placeholder=\"Full Name\"\n          value={this.state.name}\n          onChange={this.handleInputChange}\n          required\n        />\n        <Email\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          value={this.state.email}\n          onChange={this.handleInputChange}\n          required\n        />\n        <Message\n          name=\"message\"\n          type=\"text\"\n          placeholder=\"Message\"\n          value={this.state.message}\n          onChange={this.handleInputChange}\n          required\n        />\n        <Submit name=\"submit\" type=\"submit\" value=\"Send\" />\n\n        <Modal visible={this.state.showModal}>\n          <p>\n            Thank you for reaching out. I will get back to you as soon as\n            possible.\n          </p>\n          <Button onClick={this.closeModal}>Okay</Button>\n        </Modal>\n      </Form>\n    )\n  }\n}\n\nContactForm.propTypes = {\n  data: PropTypes.object,\n}\n\nexport default ContactForm\n","import React from 'react'\nimport Layout from '../components/Layout'\nimport Container from '../components/Container'\nimport PageTitle from '../components/PageTitle'\nimport ContactForm from '../components/ContactForm'\nimport SEO from '../components/SEO'\n\nconst Contact = ({ data }) => {\n  return (\n    <Layout>\n      <SEO title=\"Contact\" description=\"Contact description goes here\" />\n      <Container>\n        <PageTitle>Contact</PageTitle>\n        <ContactForm />\n      </Container>\n    </Layout>\n  )\n}\n\nexport default Contact\n"],"sourceRoot":""}