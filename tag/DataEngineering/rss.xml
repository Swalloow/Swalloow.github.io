<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>swalloow.github.io/</title>
   
   <link>http://swalloow.github.io/</link>
   <description>About Data Science, Data Engineering</description>
   <language>ko-KO</language>
   <managingEditor> Swalloow</managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>DB 테이블을 Pandas DataFrame으로 읽어오는 방법</title>
	  <link>//db-to-dataframe</link>
	  <author>Swalloow</author>
	  <pubDate>2017-01-14T19:18:00+09:00</pubDate>
	  <guid>//db-to-dataframe</guid>
	  <description><![CDATA[
	     <p>​</p>

<p>본 포스팅에서는 예시를 MySQL로 들지만 sqlalchemy의 커넥터만 변경해주면,
MySQL 뿐만 아니라 모든 데이터베이스에 적용가능하다.</p>

<p>먼저 sqlalchemy가 설치되어 있지 않다면 설치해준다.
sqlalchemy와 mysql을 연결하는 패키지가 필요하다.</p>

<p>파이썬2를 사용한다면 <code class="highlighter-rouge">mysql-python</code>,
3을 사용한다면 <code class="highlighter-rouge">pymysql</code>을 설치해주면 된다.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="c"># python2</span>
<span class="err">$</span> <span class="n">pip</span> <span class="n">install</span> <span class="n">mysql</span><span class="o">-</span><span class="n">python</span>
<span class="err">$</span> <span class="n">pip</span> <span class="n">install</span> <span class="n">sqlalchemy</span>

<span class="c"># python3</span>
<span class="err">$</span> <span class="n">pip</span> <span class="n">install</span> <span class="n">pymysql</span>
<span class="err">$</span> <span class="n">pip</span> <span class="n">install</span> <span class="n">sqlalchemy</span></code></pre></figure>

<p>​</p>

<p>이제 sqlalchemy를 통해 DB에 연결해보자.</p>

<p>주소에서 root, password, table은 DB에 맞게 변경해야 한다.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="kn">as</span> <span class="nn">pd</span>
<span class="kn">from</span> <span class="nn">sqlalchemy</span> <span class="kn">import</span> <span class="n">create_engine</span>

<span class="n">engine</span> <span class="o">=</span> <span class="n">create_engine</span><span class="p">(</span><span class="s">'mysql://root:password@localhost/table'</span><span class="p">,</span> <span class="n">convert_unicode</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">conn</span> <span class="o">=</span> <span class="n">engine</span><span class="o">.</span><span class="n">connect</span><span class="p">()</span></code></pre></figure>

<p>​</p>

<p>마지막으로 pandas를 통해 table을 읽어들일 차례다.
pandas의 read_sql 은 0.19 버전부터 생겨났으며, sqlalchemy를 필수로 사용하도록 되어 있다.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">data</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_sql_table</span><span class="p">(</span><span class="s">'table_name'</span><span class="p">,</span> <span class="n">conn</span><span class="p">)</span>
<span class="n">data</span><span class="o">.</span><span class="n">head</span><span class="p">()</span></code></pre></figure>

<p>이게 전부이다. pandas는 강력하다.</p>

<p>​</p>

<h2 id="mysql-dump---">MySQL dump 파일을 읽어오는 방법</h2>

<p>추가로 외부로부터 데이터를 넘겨받을 때 DB dump 파일 (.sql) 을 넘겨받는 경우가 있다.
데이터베이스 전체를 받은 dump 파일이라면, 커멘드에 다음과 같이 입력한다.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="c"># root, database, data.sql은 알아서 수정</span>
<span class="err">$</span> <span class="n">mysqldump</span> <span class="o">-</span><span class="n">u</span> <span class="n">root</span> <span class="o">-</span><span class="n">p</span> <span class="n">database</span> <span class="o">&gt;</span> <span class="n">data</span><span class="o">.</span><span class="n">sql</span></code></pre></figure>

<p>​</p>

<p>특정 테이블만 받고 싶다면, 커멘드에 다음과 같이 입력한다.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="c"># root, table, database, data.sql은 알아서 수정</span>
<span class="err">$</span> <span class="n">mysqldump</span> <span class="o">-</span><span class="n">u</span> <span class="n">root</span> <span class="o">-</span><span class="n">p</span> <span class="n">database</span> <span class="n">table</span> <span class="o">&gt;</span> <span class="n">data</span><span class="o">.</span><span class="n">sql</span></code></pre></figure>

<p>​</p>

<p>위와 같은 과정이 끝나면, 나의 MySQL 계정에 데이터가 저장된 것을 확인할 수 있다.
이후에는 앞에서 설명한대로 pandas를 통해 DataFrame으로 변환하면 된다.</p>

<p>​</p>

	  ]]></description>
	</item>


</channel>
</rss>
