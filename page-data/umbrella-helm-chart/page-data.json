{"componentChunkName":"component---src-templates-post-js","path":"/umbrella-helm-chart/","result":{"data":{"contentfulPost":{"id":"50edb485-5b91-5e74-84e3-b28eb9d2dadd","title":"K8S 클러스터 초기 설정을 위한 Helm Chart 만들기","slug":"umbrella-helm-chart","metaDescription":null,"publishDate":"June 20, 2020","publishDateISO":"2020-06-20","tags":[{"title":"DevOps","id":"701ee587-d6e3-5391-af93-e295765b6f45","slug":"devops"}],"heroImage":{"id":"f36c235f-3e3e-517d-bd80-697bc6183072","title":"cover-devops","fluid":{"aspectRatio":1.5,"src":"//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=1800&q=50","srcSet":"//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=450&h=300&q=50 450w,\n//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=900&h=600&q=50 900w,\n//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=1080&h=720&q=50 1080w","srcWebp":"//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=1800&q=50&fm=webp","srcSetWebp":"//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=450&h=300&q=50&fm=webp 450w,\n//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=900&h=600&q=50&fm=webp 900w,\n//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=1080&h=720&q=50&fm=webp 1080w","sizes":"(max-width: 1800px) 100vw, 1800px"},"ogimg":{"src":"//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=1800&fl=progressive&q=50"}},"body":{"id":"99c46de3-36d7-5f08-8771-e45fcd4ea237","childMarkdownRemark":{"id":"9bd3b1b0-ea88-5602-9ad0-2484e145b087","timeToRead":4,"html":"<p>K8S 클러스터를 설정하고 운영하다보면 <strong>버전 업데이트, 컴포넌트 추가 설치 등 다양한 변경</strong>에 대응할 수 있어야 합니다. 또한 Develop, Production, Staging 등 <strong>목적에 따라 다양한 클러스터를 추가로 설정하고 배포</strong>해야 하는 경우도 생깁니다. 오늘은 이러한 어려움을 해결할 수 있는 <strong>Umbrella Helm Chart</strong>에 대해 정리해보려고 합니다. Helm을 처음 접하신다면 <a href=\"https://helm.sh/docs/\">공식문서</a>를 먼저 보는 방법을 추천드립니다.</p>\n<br>\n<h2 id=\"umbrella-helm-chart\" style=\"position:relative;\"><a href=\"#umbrella-helm-chart\" aria-label=\"umbrella helm chart permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Umbrella Helm Chart</h2>\n<p><img src=\"https://drive.google.com/uc?export=view&#x26;id=1q9d6Dl9U4IIzOZ2VYrvKEC1-jcHxXWmJ\"></p>\n<p>Umbrella Helm Chart란 여러 개의 Helm Chart들이 모여있는 집합을 의미합니다. 어디에서부터 시작된 용어인지 모르겠으나 저는 <a href=\"https://kccncna19.sched.com/event/Uacr\">2019 Kubecon - Scaling to Thousands of Nodes (Airbnb)</a> 발표에서 처음 접하게 되었습니다. 사내에 K8S에 대한 요구사항이 빠르게 늘어나던 Airbnb는 멀티 클러스터 배포 전략을 통해 <a href=\"(https://kubernetes.io/docs/setup/best-practices/cluster-large/)\">Node Hard Limit</a> 이슈를 해결하게 되었고 클러스터마다 배포를 위해 Umbrella Chart를 만들어 활용했다고 합니다.</p>\n<br>\n<h2 id=\"helm-chart-만들기\" style=\"position:relative;\"><a href=\"#helm-chart-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"helm chart 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Helm Chart 만들기</h2>\n<p>말로하면 이해가 어려우니 클러스터를 새로 설정한다고 가정하고 예시를 통해 Helm Chart를 만들어보겠습니다. 예시의 클러스터에는 아래와 같은 의존성이 존재합니다. 예시는 Helm 2.16.7 버전을 사용했습니다.</p>\n<ul>\n<li><strong>cluster-autoscaler</strong>: EKS AutoScaling 설정</li>\n<li><strong>grafana</strong>: 모니터링 대시보드</li>\n<li><strong>prometheus</strong>: 시스템 지표 수집 및 저장</li>\n<li><strong>fluentbit</strong>: 어플리케이션 로그 수집</li>\n</ul>\n<br>\n<p>먼저 Helm Chart 생성을 위한 폴더 구조를 생성해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ helm create umbrella\n$ <span class=\"token builtin class-name\">cd</span> umbrella\n$ tree\n<span class=\"token builtin class-name\">.</span>\n├── Chart.yaml\n├── charts\n├── templates\n│   ├── NOTES.txt\n│   ├── _helpers.tpl\n│   ├── deployment.yaml\n│   ├── ingress.yaml\n│   ├── service.yaml\n│   └── tests\n│       └── test-connection.yaml\n├── requirements.yaml\n└── values.yaml</code></pre></div>\n<br>\n<p>기본 생성되는 폴더 구조에서 <code class=\"language-text\">requirements.yaml</code> 파일은 추가로 생성해주셔야 합니다.\n폴더 구조에서 알아두어야 할 경로는 아래와 같습니다.</p>\n<ul>\n<li><code class=\"language-text\">Chart.yaml</code>: 차트에 대한 메타 정보가 들어갑니다.</li>\n<li><code class=\"language-text\">charts/</code>: 의존성이 있는 차트 패키지들이 설치됩니다.</li>\n<li><code class=\"language-text\">templates/</code>: 차트에 필요한 template 파일들이 들어갑니다.</li>\n<li><code class=\"language-text\">templates/NOTES.txt</code>: 차트 생성 시 나타나는 설명이 들어갑니다.</li>\n<li><code class=\"language-text\">requirements.yaml</code>: 의존성 차트들이 들어갑니다.</li>\n<li><code class=\"language-text\">values.yaml</code>: 차트 설정에 필요한 default 값들이 들어갑니다.</li>\n</ul>\n<br>\n<h3 id=\"chart-metadata\" style=\"position:relative;\"><a href=\"#chart-metadata\" aria-label=\"chart metadata permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Chart Metadata</h3>\n<p>먼저 <code class=\"language-text\">Chart.yaml</code> 파일을 간단히 수정해줍니다.\n이름과 버전, 설명 등의 정보를 본인에 맞게 작성해주시면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">appVersion</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"1.0\"</span>\n<span class=\"token key atrule\">description</span><span class=\"token punctuation\">:</span> A Helm chart for Cluster Setup\n<span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> umbrella\n<span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> 0.1.0</code></pre></div>\n<br>\n<h3 id=\"chart-dependencies\" style=\"position:relative;\"><a href=\"#chart-dependencies\" aria-label=\"chart dependencies permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Chart Dependencies</h3>\n<p>이제 앞서 언급한 의존성 중에 Helm Chart 형태로 배포할 컴포넌트를 <code class=\"language-text\">requirements.yaml</code> 파일에 정의하겠습니다. 각 차트는 이름, 저장소, 버전, 컨디션 값을 지정할 수 있습니다. <code class=\"language-text\">condition: prometheus.enabled</code>의 의미는 <code class=\"language-text\">values.yaml</code>에 <code class=\"language-text\">prometheus.enabled</code> 값이 true 일 경우에만 해당 차트를 설정하겠다는 뜻 입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">dependencies</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> prometheus\n    <span class=\"token key atrule\">repository</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//kubernetes<span class=\"token punctuation\">-</span>charts.storage.googleapis.com\n    <span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> 9.7.3\n    <span class=\"token key atrule\">condition</span><span class=\"token punctuation\">:</span> prometheus.enabled\n\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> grafana\n    <span class=\"token key atrule\">repository</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//kubernetes<span class=\"token punctuation\">-</span>charts.storage.googleapis.com\n    <span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> 4.2.2\n    <span class=\"token key atrule\">condition</span><span class=\"token punctuation\">:</span> grafana.enabled\n\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> cluster<span class=\"token punctuation\">-</span>autoscaler\n    <span class=\"token key atrule\">repository</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//kubernetes<span class=\"token punctuation\">-</span>charts.storage.googleapis.com\n    <span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> 6.3.0</code></pre></div>\n<br>\n<p>이제 <code class=\"language-text\">helm dep up</code> 명령어를 통해 의존성 차트를 갱신할 수 있습니다.\n이를 통해 <code class=\"language-text\">charts/</code> 하위에 차트 파일들이 설치됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ helm dep up\nHang tight while we grab the latest from your chart repositories...\nUpdate Complete.\nSaving 3 charts\nDownloading prometheus from repo https://kubernetes-charts.storage.googleapis.com\nDownloading grafana from repo https://kubernetes-charts.storage.googleapis.com\nDownloading cluster-autoscaler from repo https://kubernetes-charts.storage.googleapis.com\nDeleting outdated charts</code></pre></div>\n<br>\n<p>의존성 차트에 적용할 설정 값들은 <code class=\"language-text\">values.yaml</code>에 정의할 수 있습니다.\ngrafana를 예시로 들면 아래와 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># values.yaml</span>\n<span class=\"token key atrule\">grafana</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">enabled</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">adminPassword</span><span class=\"token punctuation\">:</span> mypassword\n  <span class=\"token key atrule\">persistence</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">enabled</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">storageClass</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"gp2\"</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> pvc\n    <span class=\"token key atrule\">size</span><span class=\"token punctuation\">:</span> 5Gi\n  <span class=\"token key atrule\">service</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> ClusterIP</code></pre></div>\n<br>\n<h3 id=\"templates\" style=\"position:relative;\"><a href=\"#templates\" aria-label=\"templates permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Templates</h3>\n<p>의존성 패키지가 공식 Helm Chart를 지원한다면 <code class=\"language-text\">dependencies</code> 부분에 정의할 수 있겠지만 yaml 파일만 제공하는 패키지도 많이 존재합니다. 이 경우, <code class=\"language-text\">templates/</code> 하위에 yaml 파일을 추가해주시면 됩니다. 외부 설정으로 내보내고 싶은 항목들은 <strong>template function</strong>을 활용해서 수정할 수 있습니다. 여기에서는 <code class=\"language-text\">fluentbit</code>만 예시로 추가하겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token builtin class-name\">cd</span> templates\n$ <span class=\"token function\">curl</span> -O https://raw.githubusercontent.com/fluent/fluent-bit-kubernetes-logging/master/fluent-bit-service-account.yaml\n$ <span class=\"token function\">curl</span> -O https://raw.githubusercontent.com/fluent/fluent-bit-kubernetes-logging/master/fluent-bit-role.yaml\n$ <span class=\"token function\">curl</span> -O https://raw.githubusercontent.com/fluent/fluent-bit-kubernetes-logging/master/fluent-bit-role-binding.yaml\n$ <span class=\"token function\">curl</span> -O https://raw.githubusercontent.com/fluent/fluent-bit-kubernetes-logging/master/output/elasticsearch/fluent-bit-configmap.yaml</code></pre></div>\n<br>\n<h3 id=\"deploy\" style=\"position:relative;\"><a href=\"#deploy\" aria-label=\"deploy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deploy</h3>\n<p>이제 예시 차트를 클러스터에 배포할 차례입니다. 배포 후 차트 내 컴포넌트 버전 업데이트가 발생하더라도 <code class=\"language-text\">helm upgrade</code> 명령어를 통해 쉽게 관리할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># install</span>\n$ helm <span class=\"token function\">install</span> <span class=\"token builtin class-name\">.</span> --name umbrella --namespace umbrella\n\n<span class=\"token comment\"># check status</span>\n$ helm status umbrella\n$ helm get umbrella\n\n<span class=\"token comment\"># upgrade</span>\n$ helm upgrade -f values.yaml umbrella <span class=\"token builtin class-name\">.</span>\n\n<span class=\"token comment\"># delete</span>\nhelm del umbrella --purge</code></pre></div>\n<br>\n<p>만일 어플리케이션들이 모두 별도의 Helm Chart로 관리되고 있다면 Umbrella Chart에서 어플리케이션 차트까지 의존성으로 추가하는 방식으로 운영하는 방법도 있습니다. 요즘에는 Helm 이외에도 kustomize 등 다양한 도구들이 있으니 비교해보고 적절한 방식을 선택하시면 좋습니다.</p>\n<br>","excerpt":"K8S 클러스터를 설정하고 운영하다보면 버전 업데이트, 컴포넌트 추가 설치 등 다양한 변경에 대응할 수 있어야 합니다. 또한 Develop, Production, Staging 등 목적에 따라 다양한 클러스터를 추가로 설정하고 배포해야 하는 경우도 생깁니다. 오늘은 이러한 어려움을 해결할 수 있는 Umbrella Helm Chart에 대해 정리해보려고 합니다. Helm을 처음 접하신다면 공식문서를 먼저 보는 방법을 추천드립니다. Umbrella Helm Chart  Umbrella Helm Chart란 여러 개의 Helm Chart…"}}}},"pageContext":{"slug":"umbrella-helm-chart","basePath":"","prev":null,"next":{"slug":"airflow-on-kubernetes-1","publishDate":"2020-06-05"}}}}