{"componentChunkName":"component---src-templates-posts-js","path":"/10","result":{"data":{"allContentfulPost":{"edges":[{"node":{"title":"넷플릭스 본사 방문 후기","id":"c5a6cb14-63bb-5692-85f0-c5e1fdbf62e3","slug":"netflix","publishDate":"June 05, 2017","heroImage":{"id":"1faaada3-e12b-5548-8532-08b7c04dc7eb","title":"cover-personal","fluid":{"aspectRatio":1.694915254237288,"src":"//images.ctfassets.net/tushy4jlcik7/3ltdJp06NzCExAWz9OF8Ak/d8ca530c80e7c79a7bd7e4c396c0ae00/cover_personal.jpg?w=1800&q=50","srcSet":"//images.ctfassets.net/tushy4jlcik7/3ltdJp06NzCExAWz9OF8Ak/d8ca530c80e7c79a7bd7e4c396c0ae00/cover_personal.jpg?w=450&h=266&q=50 450w,\n//images.ctfassets.net/tushy4jlcik7/3ltdJp06NzCExAWz9OF8Ak/d8ca530c80e7c79a7bd7e4c396c0ae00/cover_personal.jpg?w=900&h=531&q=50 900w,\n//images.ctfassets.net/tushy4jlcik7/3ltdJp06NzCExAWz9OF8Ak/d8ca530c80e7c79a7bd7e4c396c0ae00/cover_personal.jpg?w=1400&h=826&q=50 1400w","srcWebp":"//images.ctfassets.net/tushy4jlcik7/3ltdJp06NzCExAWz9OF8Ak/d8ca530c80e7c79a7bd7e4c396c0ae00/cover_personal.jpg?w=1800&q=50&fm=webp","srcSetWebp":"//images.ctfassets.net/tushy4jlcik7/3ltdJp06NzCExAWz9OF8Ak/d8ca530c80e7c79a7bd7e4c396c0ae00/cover_personal.jpg?w=450&h=266&q=50&fm=webp 450w,\n//images.ctfassets.net/tushy4jlcik7/3ltdJp06NzCExAWz9OF8Ak/d8ca530c80e7c79a7bd7e4c396c0ae00/cover_personal.jpg?w=900&h=531&q=50&fm=webp 900w,\n//images.ctfassets.net/tushy4jlcik7/3ltdJp06NzCExAWz9OF8Ak/d8ca530c80e7c79a7bd7e4c396c0ae00/cover_personal.jpg?w=1400&h=826&q=50&fm=webp 1400w","sizes":"(max-width: 1800px) 100vw, 1800px"},"ogimg":{"src":"//images.ctfassets.net/tushy4jlcik7/3ltdJp06NzCExAWz9OF8Ak/d8ca530c80e7c79a7bd7e4c396c0ae00/cover_personal.jpg?w=1800&fl=progressive&q=50"}},"body":{"id":"7e95e495-db1b-50e7-a7f0-2f7c82552217","childMarkdownRemark":{"id":"938e9322-dd56-5ac8-af32-3908b790d7e3","timeToRead":1,"html":"<p><img src=\"https://drive.google.com/uc?export=view&#x26;id=13SMWHqAXVQymqS-nuy2xmVdjTj82uyeS\" alt=\"netflix\"></p>\n<p>미국 여행하면서 다양한 경험을 했지만, 넷플릭스는 그 중 가장 기억에 남았던 장소다.\n우연히 넷플릭스의 추천 팀 데이터 엔지니어로 근무하시는 선배님과 연락이 되었고,\n덕분에 많은 이야기를 들을 수 있었다.</p>\n<p><img src=\"https://drive.google.com/uc?export=view&#x26;id=1fdn5sYeQKbnZvwOyIjj1v10kGTQ8pjXo\" alt=\"netflix\"></p>\n<p>넷플릭스의 연봉은 실리콘밸리에서도 많이 주는 편이다.\n자세한 금액은 <a href=\"https://www.glassdoor.com/\">https://www.glassdoor.com/</a> 에서 확인해보자.</p>\n<p>넷플릭스의 기반인 마이크로 아키텍쳐로 인해 팀 구성원도 그에 맞게 쪼개어져 있다.\n적은 팀은 3명까지도 있고, 그 중에서 추천 팀은 10명 정도로 구성되어 있다고 한다.</p>\n<p><img src=\"https://drive.google.com/uc?export=view&#x26;id=1BDFj7IeAENwjtt5j4jnGVwz2pQkAq2lX\" alt=\"netflix\"></p>\n<p>회사 내부는 마치 영화관처럼 꾸며져 있었다.\n실제로 넷플릭스 내에는 영화를 볼 수 있는 영화관도 있다.\n계단에는 카페트가 깔려있고 벽면에는 영화 포스터들이 붙어있었다.\n각 층마다 회의실, 세미나실이 정말 많았는데, 모두 영화 이름이 붙어 있었다.\n예를 들면, 회의실의 이름이 닥터 지바고, 어벤져스 이런 식이다.</p>\n<p><img src=\"https://drive.google.com/uc?export=view&#x26;id=1IgkAkU2j3IUbOwQELnAhB0m9aVFRT75z\" alt=\"netflix\"></p>\n<p>그리고 층마다, 건물마다 전혀 다른 분위기다.\n엔지니어링 팀이 있는 곳은 모니터가 여러 개에 집중하는 분위기였고,\nUI/UX 팀이 위치한 곳은 전부 오픈된 공간에 자유로운 분위기였다.\n벽면에는 목업디자인 샘플이 많이 붙어있었고 포스트잇을 통해 누구나 피드백을 주는 듯 했다.\n밖에 나가면 산책로와 함께 거대한 공원이 있다.</p>\n<p><img src=\"https://drive.google.com/uc?export=view&#x26;id=1FE63vS9Anafu9PIlfyHGR_30bS7rlMRU\" alt=\"netflix\"></p>\n<p>넷플릭스의 추천 시스템은 실시간, 전 세계 사용자를 대상으로 돌아간다.\n셀제로 각 국가 별 실시간 인기 영화 순위를 보여주는 대시보드를 볼 수 있었다.\n넷플릭스의 추천 시스템은 정말 유명하지만 여전히 고민하는 부분이 많다고 한다.\n(비인기지역의 데이터를 어떻게 처리할 것인지, Cold start problem을 어떻게 해결할 것인지 등)\n최근에는 딥러닝을 이용한 추천 시스템도 개발 중이라고 한다.</p>\n<p>데이터 관련 팀은 데이터 분석 팀과 데이터 엔지니어링 팀이 나뉘어 있고 추천 팀은 그 사이에 존재한다.\n데이터 분석 팀은 주로 머신러닝 쪽 일을 한다. (Model training, Parameter tuning)\n중요한 것은 연구를 한다기보다 기존에 나온 여러 연구들 중에\n넷플릭스에 어울리는 것을 찾아 빠르게 적용해보고 성능 테스트를 하는 것이다.</p>\n<p>그리고 데이터 엔지니어링 팀은 사용자들의 다양한 로그 데이터를 수집하고 이를 빠르게 프로세싱한다.\n흔히 말하는 데이터 파이프라인에 관련된 일을 한다.\n그리고 또 한 가지 일은 실제 어플리케이션에 모델이 잘 동작하도록 만드는 일이다.\n데이터 엔지니어링 팀에서 주로 사용하는 것은 Apache Spark 그리고 Scala 언어다.\n미국에서도 Spark의 인기는 엄청나다고 한다.\n년, 월, 일, 시간, 분 단위로 데이터를 나누어 저장하고 이를 불러와서 사용한다.</p>\n<p>추천이 중요한 이유는 명확하다.\n넷플릭스의 유저가 전 세계 몇 억명인데 이 중에 0.5% 리텐션이 늘게 되었을 때,\n얻을 수 있는 매출 효과가 어마어마하기 때문이다.</p>\n<br>","excerpt":"netflix…"}}}},{"node":{"title":"실리콘밸리 여행 후기","id":"b1338df8-17a6-5ab9-a3fd-1cce3c41579b","slug":"sanfran-travel","publishDate":"June 05, 2017","heroImage":{"id":"1faaada3-e12b-5548-8532-08b7c04dc7eb","title":"cover-personal","fluid":{"aspectRatio":1.694915254237288,"src":"//images.ctfassets.net/tushy4jlcik7/3ltdJp06NzCExAWz9OF8Ak/d8ca530c80e7c79a7bd7e4c396c0ae00/cover_personal.jpg?w=1800&q=50","srcSet":"//images.ctfassets.net/tushy4jlcik7/3ltdJp06NzCExAWz9OF8Ak/d8ca530c80e7c79a7bd7e4c396c0ae00/cover_personal.jpg?w=450&h=266&q=50 450w,\n//images.ctfassets.net/tushy4jlcik7/3ltdJp06NzCExAWz9OF8Ak/d8ca530c80e7c79a7bd7e4c396c0ae00/cover_personal.jpg?w=900&h=531&q=50 900w,\n//images.ctfassets.net/tushy4jlcik7/3ltdJp06NzCExAWz9OF8Ak/d8ca530c80e7c79a7bd7e4c396c0ae00/cover_personal.jpg?w=1400&h=826&q=50 1400w","srcWebp":"//images.ctfassets.net/tushy4jlcik7/3ltdJp06NzCExAWz9OF8Ak/d8ca530c80e7c79a7bd7e4c396c0ae00/cover_personal.jpg?w=1800&q=50&fm=webp","srcSetWebp":"//images.ctfassets.net/tushy4jlcik7/3ltdJp06NzCExAWz9OF8Ak/d8ca530c80e7c79a7bd7e4c396c0ae00/cover_personal.jpg?w=450&h=266&q=50&fm=webp 450w,\n//images.ctfassets.net/tushy4jlcik7/3ltdJp06NzCExAWz9OF8Ak/d8ca530c80e7c79a7bd7e4c396c0ae00/cover_personal.jpg?w=900&h=531&q=50&fm=webp 900w,\n//images.ctfassets.net/tushy4jlcik7/3ltdJp06NzCExAWz9OF8Ak/d8ca530c80e7c79a7bd7e4c396c0ae00/cover_personal.jpg?w=1400&h=826&q=50&fm=webp 1400w","sizes":"(max-width: 1800px) 100vw, 1800px"},"ogimg":{"src":"//images.ctfassets.net/tushy4jlcik7/3ltdJp06NzCExAWz9OF8Ak/d8ca530c80e7c79a7bd7e4c396c0ae00/cover_personal.jpg?w=1800&fl=progressive&q=50"}},"body":{"id":"8f32eb92-a430-5784-a56e-9c8bedc73dd4","childMarkdownRemark":{"id":"9c6f8034-d8b8-59ec-b5b1-539e29c3adcb","timeToRead":1,"html":"<p>실리콘밸리는 미국 캘리포니아 주 샌프란시스코 만 지역 남부에 위치한다.\n우연히 좋은 기회를 얻게 되어 여러 회사에 들어가볼 수 있었다.</p>\n<p>먼저 여행 계획 단계부터 대충 정리하자면,\n어떤 IT 회사든지 방문증이 없으면 사내에 들어갈 수 없다.\n나 같은 경우, 고민 끝에 링크드인에 있는 지인들을 수소문하거나\n컨퍼런스에서 처음 만난 분에게 부탁해서 들어갈 수 있었다.</p>\n<p>미국에서는 흔히 CS과 대학생들이 실리콘밸리 회사 투어를 하기도 하는데\n누군가가 멋진 구글 지도를 만들어 주어서 편하게 다닐 수 있었다.</p>\n<p><a href=\"https://www.google.com/maps/d/viewer?mid=1Inhyh5iUl-incqCMwzdXirUbWUk&#x26;ll=37.54682624469536%2C-122.17239440000003&#x26;z=9\">https://www.google.com/maps/d/viewer?mid=1Inhyh5iUl-incqCMwzdXirUbWUk&#x26;ll=37.54682624469536%2C-122.17239440000003&#x26;z=9</a></p>\n<p>간단히 살펴보면, 샌프란 위쪽에 있는 BayArea 지역에 몰려있고\n다음으로 Palo Alto, SunneyVale, SanJose 까지 널려있다.\n보통 시내에서 떨어진 지역에 위치한 회사들은 대부분 캠퍼스처럼 자리잡고 있다.</p>\n<p><img src=\"https://drive.google.com/uc?export=view&#x26;id=1zoEMEmGe6gMjSBdFymCTHLGacJE9bETl\" alt=\"wework\"></p>\n<p>직원들은 대부분 정말 자유롭게 일한다.\n소파같은 곳에 누워서 코딩하는 사람도 많았고,\n개발 팀에는 개인 책상 + 스탠드 책상이 있어서 서서 개발하는 사람도 많았다.</p>\n<p>그 곳에서 일하는 사람들과 이야기를 나눠보면 자유로운 만큼 책임이 따른다고 한다.\n실력이 많이 부족하거나 회사에 맞지 않다고 판단되면 가차 없이 짜른다.\n그리고 그렇게 짐싸는 직원들은 회사를 욕하는게 아니라,\n'아 내가 부족하구나'를 느끼고 스스로 발전하기 위한 발판으로 삼는다.</p>\n<p><img src=\"https://drive.google.com/uc?export=view&#x26;id=17s24faQjyP9HWkOzgD-ytUFYMGzpviwa\"></p>\n<p>링크드인은 메인 로비에 카페와 라운지가 있다.\n그 공간에서 링크드인 회원들을 위한 커리어 상담 서비스를 제공한다.</p>\n<p><img src=\"https://drive.google.com/uc?export=view&#x26;id=1b3SJ_XWlgmd_MyjpyYkl_b0xtD6_h05c\">\n<img src=\"https://drive.google.com/uc?export=view&#x26;id=16HHt4Bk6L5eAgsW9HVpIGTs0VPlrG-zi\">\n<img src=\"https://drive.google.com/uc?export=view&#x26;id=1-sLrAdBdguROYD1YluH73TP67lpzB7u3\"></p>\n<p>친절한 GitHub Help 직원이 스티커를 계속 가져가라고 해서 챙겨왔다.\n그리고 로비에는 '생각하는 옥토캣' 조각상이 있다.</p>\n<p><img src=\"https://drive.google.com/uc?export=view&#x26;id=1uOm_G9GevyCKZO_yDdVgWqhEQzgWGfV3\">\n<img src=\"https://drive.google.com/uc?export=view&#x26;id=1ZQYw8fh6cb8AyhOtIO4cTSM4rNNjFFgI\">\n<img src=\"https://drive.google.com/uc?export=view&#x26;id=1gJqpxSo3SgGmkWE7oUX7S1CcVN0MYOCd\"></p>\n<p>파이어폭스와 구글 오피스는 바다 바로 앞에 위치한다.\n구글은 오직 직원에게만 출입이 허용된다.</p>\n<br>","excerpt":"…"}}}},{"node":{"title":"influxDB와 Grafana로 실시간 서버 모니터링 구축하기(2)","id":"e44a24d4-9d90-5318-84da-811f62ecdd4c","slug":"influx-grafana2","publishDate":"April 05, 2017","heroImage":{"id":"f36c235f-3e3e-517d-bd80-697bc6183072","title":"cover-devops","fluid":{"aspectRatio":1.5,"src":"//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=1800&q=50","srcSet":"//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=450&h=300&q=50 450w,\n//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=900&h=600&q=50 900w,\n//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=1080&h=720&q=50 1080w","srcWebp":"//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=1800&q=50&fm=webp","srcSetWebp":"//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=450&h=300&q=50&fm=webp 450w,\n//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=900&h=600&q=50&fm=webp 900w,\n//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=1080&h=720&q=50&fm=webp 1080w","sizes":"(max-width: 1800px) 100vw, 1800px"},"ogimg":{"src":"//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=1800&fl=progressive&q=50"}},"body":{"id":"0dc2592f-9f44-57b5-9405-657860ebe6f3","childMarkdownRemark":{"id":"58aa0191-ba38-5552-bd9c-747ec10a4ebd","timeToRead":1,"html":"<p><a href=\"https://swalloow.github.io/influx-grafana1\">지난 포스팅</a>에 이어서 Grafana를 연동해보도록 하겠습니다.</p>\n<br>\n<h2 id=\"grafana\" style=\"position:relative;\"><a href=\"#grafana\" aria-label=\"grafana permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Grafana</h2>\n<p><img src=\"https://drive.google.com/uc?export=view&#x26;id=16gNVLVytHGOCDYJENa3_HZidpimL68fq\" alt=\"Grafana\"></p>\n<p>지난 번에 설치했던 Grafana 도커 이미지를 컨테이너로 실행하면 위와 같이 로그인 화면이 나타납니다.\n아이디는 admin, 비밀번호는 admin으로 접속하시면 됩니다.\n이제 아까 만들었던 database를 Grafana의 data source에 등록할 차례입니다.</p>\n<p><img src=\"https://drive.google.com/uc?export=view&#x26;id=1hWVtjMdmrQXP-FKtkOwxg4716YOwNv-w\" alt=\"Grafana-ds\"></p>\n<p>Type을 InfluxDB로 맞추고, Url과 Database만 잘 설정해주시면 됩니다.\n이제 새로운 대시보드를 생성하고 <code class=\"language-text\">Add Graph</code>로 그래프를 추가합니다.</p>\n<p><img src=\"https://drive.google.com/uc?export=view&#x26;id=15FNDZ-kKNkGSLfGFVPmVPB3vpO4KxiAy\" alt=\"Grafana-graph\"></p>\n<p>위와 같이 cpu, memory 지표 외에도 다양한 지표를 쉽게 추가할 수 있습니다.</p>\n<p><img src=\"https://drive.google.com/uc?export=view&#x26;id=1LG7ZUH7JyAk28qWTQFZxrA4Bkd9Pn21a\" alt=\"Mac\"></p>\n<br>","excerpt":"지난 포스팅에 이어서 Grafana를 연동해보도록 하겠습니다. Grafana Grafana 지난 번에 설치했던 Grafana…"}}}},{"node":{"title":"influxDB와 Grafana로 실시간 서버 모니터링 구축하기(1)","id":"fe92fedb-c222-5a64-8d7b-c8200fe21396","slug":"influx-grafana1","publishDate":"April 05, 2017","heroImage":{"id":"f36c235f-3e3e-517d-bd80-697bc6183072","title":"cover-devops","fluid":{"aspectRatio":1.5,"src":"//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=1800&q=50","srcSet":"//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=450&h=300&q=50 450w,\n//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=900&h=600&q=50 900w,\n//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=1080&h=720&q=50 1080w","srcWebp":"//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=1800&q=50&fm=webp","srcSetWebp":"//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=450&h=300&q=50&fm=webp 450w,\n//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=900&h=600&q=50&fm=webp 900w,\n//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=1080&h=720&q=50&fm=webp 1080w","sizes":"(max-width: 1800px) 100vw, 1800px"},"ogimg":{"src":"//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=1800&fl=progressive&q=50"}},"body":{"id":"2176ee85-aacc-58a7-be53-1eee026070cb","childMarkdownRemark":{"id":"eba217e2-616d-5438-8c4d-042eca2696b6","timeToRead":2,"html":"<p>요즘 실시간 로그 수집 및 분석 도구로 <strong>ELK (Elastic Search)</strong> 를 많이 사용하지만,\n간단한 서버 모니터링이나 시계열 데이터 분석도구를 찾으신다면, <strong>influxDB-Grafana</strong> 도 좋습니다.\n이 포스팅에서는 간단한 예제를 통해 influxDB와 Telegraf, Grafana에 대해 알아보겠습니다.</p>\n<br>\n<h3 id=\"influxdb\" style=\"position:relative;\"><a href=\"#influxdb\" aria-label=\"influxdb permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>influxDB</h3>\n<p><img src=\"https://drive.google.com/uc?export=view&#x26;id=1Ut1x1TsWuj1liYV22hf6IfQRj2mjVS4k\" alt=\"influxDB\"></p>\n<p>influxDB는 시계열 데이터베이스입니다.\n다른 시계열 데이터베이스도 많지만, 설치가 쉽고 간편합니다.\n그리고 SQL 구문과 graphite 등 여러 프로토콜을 지원하여 확장성이 높습니다.</p>\n<p>작년 9월에 1.0 버전을 릴리즈했으며, 현재 기준 1.2가 최신 버전입니다.\n시계열 데이터베이스는 로그, 시스템 모니터링 도구로 활용될 수도 있지만,\n주식, 환율과 같은 시계열 데이터의 분석 도구로도 많이 사용됩니다.</p>\n<p>그렇다면 바로 로컬에 설치해보도록 하겠습니다.\n여기서는 OS X 기준이며, 다른 OS는 <a href=\"https://docs.influxdata.com/influxdb/v1.2/introduction/installation/\">설치 페이지를</a> 참조하시면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ brew update influxdb\n$ brew <span class=\"token function\">install</span> influxdb</code></pre></div>\n<br>\n<p>실습은 Docker를 통해 진행하도록 하겠습니다.\nDockerHub로부터 influxdb와 Grafana 이미지를 받아옵니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker pull tutum/influxdb\n$ docker pull grafana/grafana</code></pre></div>\n<p><img src=\"https://drive.google.com/uc?export=view&#x26;id=1RQB5EJkOCuf-ehzqwpApIlJN5u7oQQws\" alt=\"influx-port\"></p>\n<p>받아온 이미지를 컨테이너로 실행시키고, 위와 같이 포트를 변경해줍니다.\n8083 포트는 웹 클라이언트로 사용되며, 8086 포트는 데이터를 주입하고 가져가는 용도로 사용됩니다.\n이제 호스트의 8086 주소로 들어가보면 influxDB의 관리자 페이지를 볼 수 있습니다.</p>\n<p><img src=\"https://drive.google.com/uc?export=view&#x26;id=1h_CT_JdxSiKdUEY-zmrLwYz0m1FwFri4\" alt=\"influx-admin\"></p>\n<p>쿼리를 잘 모르더라도 좌측의 Query Templates를 통해 쉽게 입력할 수 있습니다.\n스키마는 기존의 데이터베이스와 비슷하면서도 조금 다릅니다.\nHTTP로 데이터를 핸들링 할 수 있으며, 이외에도 여러 가지 특징이 있지만\n여기서 설명하기보다는 공식 래퍼런스를 참조하는 편이 나을 것 같습니다.</p>\n<br>\n<h3 id=\"telegraf\" style=\"position:relative;\"><a href=\"#telegraf\" aria-label=\"telegraf permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Telegraf</h3>\n<p>이제 Telegraf로 실시간 시스템 지표를 influxDB에 넣어보겠습니다.\nTelegraf는 다양한 데이터 소스에서 plugin을 통해 데이터를 수집하고 저장합니다.\n제공하는 input plugin은 <a href=\"https://github.com/influxdata/telegraf#input-plugins\">다음 페이지</a>에서 확인하실 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ brew update\n$ brew <span class=\"token function\">install</span> telegraf</code></pre></div>\n<p>위와 같이 설치한 다음, system plugin을 사용해보도록 하겠습니다.\n<code class=\"language-text\">--sample-config</code>를 통해 .conf 파일을 생성할 수 있습니다.\ninput filter는 cpu와 memory 지표로, output은 influxDB에 저장됩니다.\n.conf 파일을 열어 <code class=\"language-text\">output host url</code>을 본인의 호스트에 맞게 변경해주어야 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ telegraf --sample-config  --input-filter cpu:mem --output-filter influxdb <span class=\"token operator\">></span> telegraf.conf\n$ telegraf -config telegraf.conf</code></pre></div>\n<p>이제 influxDB로 돌아와서 보시면, telegraf 라는 데이터베이스가 생성되어 있습니다.\nmeasurement를 확인해보시거나 쿼리를 날려 데이터를 확인할 수 있습니다.</p>\n<p><img src=\"https://drive.google.com/uc?export=view&#x26;id=14drhOWGgi-BslK6S4PNLcjEKQt1KFUzK\" alt=\"influx-admin2\"></p>\n<p>influxDB는 언젠가 디스크가 찰 수 있어서, 데이터 보관 또는 삭제에 대한 정책이 필요합니다.\n이에 대해서는 <code class=\"language-text\">Retention Policy</code>를 찾아보시면 됩니다.</p>\n<br>","excerpt":"요즘 실시간 로그 수집 및 분석 도구로 ELK (Elastic Search…"}}}},{"node":{"title":"Spring JPA, MyBatis","id":"030036f6-590b-5a23-af70-6e20f03b6107","slug":"spring-boot-jpa","publishDate":"April 05, 2017","heroImage":{"id":"1563c3af-a4e8-5db4-acb2-9bfd9fdb294d","title":"cover-develop","fluid":{"aspectRatio":1.5,"src":"//images.ctfassets.net/tushy4jlcik7/4W9SzEIJpHuwsUBnxSSypH/3a18765095ea5756c742b7adb83a0518/cover_develop.jpg?w=1800&q=50","srcSet":"//images.ctfassets.net/tushy4jlcik7/4W9SzEIJpHuwsUBnxSSypH/3a18765095ea5756c742b7adb83a0518/cover_develop.jpg?w=450&h=300&q=50 450w,\n//images.ctfassets.net/tushy4jlcik7/4W9SzEIJpHuwsUBnxSSypH/3a18765095ea5756c742b7adb83a0518/cover_develop.jpg?w=900&h=600&q=50 900w,\n//images.ctfassets.net/tushy4jlcik7/4W9SzEIJpHuwsUBnxSSypH/3a18765095ea5756c742b7adb83a0518/cover_develop.jpg?w=1800&h=1200&q=50 1800w","srcWebp":"//images.ctfassets.net/tushy4jlcik7/4W9SzEIJpHuwsUBnxSSypH/3a18765095ea5756c742b7adb83a0518/cover_develop.jpg?w=1800&q=50&fm=webp","srcSetWebp":"//images.ctfassets.net/tushy4jlcik7/4W9SzEIJpHuwsUBnxSSypH/3a18765095ea5756c742b7adb83a0518/cover_develop.jpg?w=450&h=300&q=50&fm=webp 450w,\n//images.ctfassets.net/tushy4jlcik7/4W9SzEIJpHuwsUBnxSSypH/3a18765095ea5756c742b7adb83a0518/cover_develop.jpg?w=900&h=600&q=50&fm=webp 900w,\n//images.ctfassets.net/tushy4jlcik7/4W9SzEIJpHuwsUBnxSSypH/3a18765095ea5756c742b7adb83a0518/cover_develop.jpg?w=1800&h=1200&q=50&fm=webp 1800w","sizes":"(max-width: 1800px) 100vw, 1800px"},"ogimg":{"src":"//images.ctfassets.net/tushy4jlcik7/4W9SzEIJpHuwsUBnxSSypH/3a18765095ea5756c742b7adb83a0518/cover_develop.jpg?w=1800&fl=progressive&q=50"}},"body":{"id":"40367ba4-94f6-53ba-9ae5-8427f1fc7ed4","childMarkdownRemark":{"id":"f83d6bf4-7f83-50e1-b99d-795a0a22015f","timeToRead":1,"html":"<p>최근 스프링 부트를 공부하면서 이것저것 정리하는 중 입니다.</p>\n<br>\n<h2 id=\"jpa-hibernate\" style=\"position:relative;\"><a href=\"#jpa-hibernate\" aria-label=\"jpa hibernate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JPA, Hibernate</h2>\n<p>스프링 JPA와 MyBatis 모두 <strong>Persistance API</strong> 입니다.\nJPA는 기존의 EJB와 다른 POJO 기반의 ORM 모델을 제공하며,\n대표적으로 <strong>Hibernate</strong> 프레임워크 구현체가 있습니다.</p>\n<p>먼저, ORM이라는 개념에 대해 알아야 합니다.\n<strong>ORM(Object Relational Mapper)</strong> 는 말 그대로 자바 객체와\n데이터베이스의 Entity를 그대로 연결하는 것을 말합니다.\n따라서, 모든 SQL문은 Hibernate의 HSQL을 통해 이루어집니다.</p>\n<p>이런 개념이 생겨나게 된 이유를 생각해보면\n객체지향적으로 데이터를 관리할 수 있기 때문에 비즈니스 로직에 집중 할 수 있으며,\n객체지향 개발이 가능하다. 또한, 로직을 쿼리보다 객체에 집중할 수 있다.\n따라서, 더 빠른 개발이 가능합니다.</p>\n<br>\n<h2 id=\"mybatis\" style=\"position:relative;\"><a href=\"#mybatis\" aria-label=\"mybatis permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MyBatis</h2>\n<p>MyBatis는 <strong>SQL Mapper</strong> 입니다.\n기존에 JDBC를 사용할 때는 DB와 관련된 여러 복잡한 설정(Connection) 들을 다루어야 했습니다.\nSQL Mapper는 자바 객체를 실제 SQL문에 연결함으로써,\n빠른 개발과 편리한 테스트 환경을 제공해주었습니다.</p>\n<p>MyBatis 프로젝트는 원래 Apache Foundation의 iBatis 였으나,\n생산성, 개발 프로세스, 커뮤니티 등의 이유로 Google Code로 이전되면서 이름이 바뀌었습니다.\n마이그레이션이 되면서 바뀐 차이점은 아래와 같습니다.</p>\n<ul>\n<li>JDK 1.5, Annotation</li>\n<li>Dynatic SQL, XML Element</li>\n</ul>\n<br>\n<h2 id=\"정리하면서\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A6%AC%ED%95%98%EB%A9%B4%EC%84%9C\" aria-label=\"정리하면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정리하면서</h2>\n<p>전 세계적으로 다양한 언어와 프레임워크가 ORM을 지원하는 방향으로\n움직이고 있으며, 많은 회사에서 생산성이 높다는 사실을 입증했습니다.</p>\n<p>하지만, MyBatis를 쓰더라도 본인이 쿼리 작성 능력이 뛰어나고,\n쿼리 최적화에 자신이 있다면, 더 생산성이 높을 수 있습니다.</p>\n<p>반대로, 데이터베이스 모델링에 대한 개념이 없다면,\nHibernate를 쓰더라도 성능 문제와 데이터 손실이 생길 수 있습니다.\nORM도 결국 SQL을 사용한 기술입니다.\n따라서 ORM을 사용하더라도 어떤 SQL이 실행될 지 알아야 할 필요가 있습니다.\n결국 상황을 잘 고려해서 본인에게 생산성이 더 높은 프레임워크를 선택하는 것이 옳은 것 같습니다.</p>\n<br>","excerpt":"최근 스프링 부트를 공부하면서 이것저것 정리하는 중 입니다. JPA, Hibernate 스프링 JPA와 MyBatis 모두 Persistance…"}}}},{"node":{"title":"Docker와 Gitlab CI를 활용한 빌드, 테스트 자동화","id":"621294a0-8d52-55c7-8faf-4ec046187c06","slug":"gitlabci-docker","publishDate":"March 31, 2017","heroImage":{"id":"f36c235f-3e3e-517d-bd80-697bc6183072","title":"cover-devops","fluid":{"aspectRatio":1.5,"src":"//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=1800&q=50","srcSet":"//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=450&h=300&q=50 450w,\n//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=900&h=600&q=50 900w,\n//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=1080&h=720&q=50 1080w","srcWebp":"//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=1800&q=50&fm=webp","srcSetWebp":"//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=450&h=300&q=50&fm=webp 450w,\n//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=900&h=600&q=50&fm=webp 900w,\n//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=1080&h=720&q=50&fm=webp 1080w","sizes":"(max-width: 1800px) 100vw, 1800px"},"ogimg":{"src":"//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=1800&fl=progressive&q=50"}},"body":{"id":"8113e868-69c3-58fb-8823-a90d89e5d7aa","childMarkdownRemark":{"id":"89ad52b7-f054-5de5-ba3f-e321a1e1ff2f","timeToRead":2,"html":"<p>Gitlab은 설치형 GitHub이라고 이해하시면 편합니다.\n무료로 private repository와 CI 서버를 제공해줍니다.\n심지어 Docker Registry도 무료로 제공하고 있습니다.\n아직 많은 분들이 Gitlab CI의 여러 장점들을 잘 모르시는 것 같아 정리해보았습니다.</p>\n<br>\n<h2 id=\"gitlab-ci\" style=\"position:relative;\"><a href=\"#gitlab-ci\" aria-label=\"gitlab ci permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gitlab CI</h2>\n<p>Gitlab CI는 Gitlab에서 무료로 제공하는 CI 툴 입니다.\nGitlab과 완벽하게 연동되며 CI를 위해 <strong>CI linter, pipeline, cycle analytics</strong> 등 다양한 서비스를 제공합니다.</p>\n<p><img src=\"https://drive.google.com/uc?export=view&#x26;id=12ueSzm9zHHNjbB0obiyQKQkq0oRDQRyT\" alt=\"Gitlab-CI\"></p>\n<p>travis, circle CI와 마찬가지로 Gitlab CI는 <code class=\"language-text\">gitlab-ci.yml</code> 파일로 설정할 수 있습니다.\nGitlab은 DigitalOcean과 제휴하여 CI 서버(Runner)를 따로 제공합니다.\n따라서 <code class=\"language-text\">Runner</code>에 job을 할당하여 돌아가도록 설정할 수 있습니다.</p>\n<p><img src=\"https://drive.google.com/uc?export=view&#x26;id=18UiYA8YavR5RFRPsWyTqn5KgllC0_R_n\" alt=\"Gitlab-Pipe\"></p>\n<p>그리고 Runner는 <strong>Docker 컨테이너</strong> 를 기반으로 돌아갑니다.\nGitlab CI를 실행해보면 처음에 Ruby 이미지를 받아와서 컨테이너를 실행시키는 것을 볼 수 있습니다.\n따라서, <strong>Base Image를 내 어플리케이션 이미지로 바꾸면 빌드 및 테스트 속도가 빠르게 향상됩니다</strong>.</p>\n<br>\n<h2 id=\"gitlab-registry\" style=\"position:relative;\"><a href=\"#gitlab-registry\" aria-label=\"gitlab registry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gitlab Registry</h2>\n<p><img src=\"https://drive.google.com/uc?export=view&#x26;id=1bttUEMvybKSWTIsnZCjgZ95m33o7ZX8G\" alt=\"Gitlab-Registry\"></p>\n<p>Docker 친화적인 Gitlab은 Docker Registry도 무료로 제공해줍니다.\n<code class=\"language-text\">Gitlab Registry</code> 탭에 들어가면 Docker Registry의 주소가 적혀있고 친절하게 명령어까지 써있습니다.</p>\n<p>아마 많은 분들이 DockerHub를 결제하거나, AWS S3를 이용하여 Docker Registry를 구축하셨을 겁니다. 하지만 Gitlab에서는 그럴 필요가 없습니다.</p>\n<br>\n<h2 id=\"docker-with-gitlab-ci\" style=\"position:relative;\"><a href=\"#docker-with-gitlab-ci\" aria-label=\"docker with gitlab ci permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Docker with Gitlab CI</h2>\n<p>gitlab-ci 설정파일은 대략 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> gitlab<span class=\"token punctuation\">-</span>registry\n<span class=\"token key atrule\">stages</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> build\n  <span class=\"token punctuation\">-</span> test\n  <span class=\"token punctuation\">-</span> deploy\n\n<span class=\"token key atrule\">job-build</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">stage</span><span class=\"token punctuation\">:</span> build\n  <span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> pip install <span class=\"token punctuation\">-</span>r requirements.txt\n  <span class=\"token punctuation\">-</span> python <span class=\"token punctuation\">-</span>m py_compile run.py\n\n<span class=\"token key atrule\">job-test</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">stage</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> pytest <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>pep8 <span class=\"token punctuation\">-</span>m pep8 backend/\n\n<span class=\"token key atrule\">job-deploy</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">stage</span><span class=\"token punctuation\">:</span> deploy\n  <span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> deployment</code></pre></div>\n<p>Gitlab CI와 Docker를 활용한 빌드 테스트 자동화는 위의 그림과 같이 이루어집니다.</p>\n<p><img src=\"https://drive.google.com/uc?export=view&#x26;id=1pi_awWtNGHqPLHT_hWF7m16TRTxs9qcr\" alt=\"CI\"></p>\n<ol>\n<li>사용자가 Gitlab 저장소에 push를 하면, Gitlab CI Runner로 전달됩니다.</li>\n<li>Gitlab CI는 Gitlab Registry로부터 Docker 이미지를 받아옵니다. Docker 이미지에는 어플리케이션 환경이 설정되어 있습니다.</li>\n<li>Docker 컨테이너가 실행되면 첫번째 job에 정의된 대로 필요한 패키지를 설치하고 빌드를 수행합니다.</li>\n<li>빌드가 통과되면 두번째 job에 정의된 대로 테스트를 수행합니다.</li>\n<li>테스트가 통과되면 세번째 job에 정의된 대로 배포 과정을 수행합니다.</li>\n<li>각 과정은 모두 Slack 알림으로 확인할 수 있습니다.</li>\n</ol>\n<br>\n<p><img src=\"https://drive.google.com/uc?export=view&#x26;id=1tYKR4ykz1LcuHCtGhe1Sim7Vhy7SGOCi\" alt=\"Gitlab\"></p>\n<p>위와 같이 모든 과정을 <code class=\"language-text\">Gitlab Pipeline</code>을 통해 확인하실 수 있습니다.</p>\n<p>Gitlab의 단점이라면 Community 버전의 서버가 조금 불안정하다는 점입니다.\n물론 설치형 Gitlab을 사용하신다면 이런 단점마저 존재하지 않습니다.\n소규모의 팀이라면 충분히 도입을 검토해볼만 하다고 생각합니다.</p>\n<br>","excerpt":"Gitlab은 설치형 GitHub이라고 이해하시면 편합니다.\n무료로 private repository와 CI…"}}}}]}},"pageContext":{"basePath":"","paginationPath":"","pageNumber":9,"humanPageNumber":10,"skip":55,"limit":6,"numberOfPages":16,"previousPagePath":"/9","nextPagePath":"/11"}}}