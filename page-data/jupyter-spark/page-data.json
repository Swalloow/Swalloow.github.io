{"componentChunkName":"component---src-templates-post-js","path":"/jupyter-spark/","result":{"data":{"contentfulPost":{"id":"879c5edc-af79-5354-a513-399c005b86ee","title":"Jupyter에서 Scala로 Spark 사용하는 방법","slug":"jupyter-spark","metaDescription":null,"publishDate":"March 22, 2017","publishDateISO":"2017-03-22","tags":[{"title":"DataEngineering","id":"6d3fb203-7cdf-53d7-be6f-12ba3e82d74d","slug":"dataengineering"}],"heroImage":{"id":"dab22ea8-d54d-52a6-852a-278ba3b19a2b","title":"cover-dataengineering","fluid":{"aspectRatio":1.499531396438613,"src":"//images.ctfassets.net/tushy4jlcik7/7uo9TsqFN9EBsDBqDJ5vXl/4c58a9f94babb15d8fd996c247737656/cover_dataengineering.jpg?w=1800&q=50","srcSet":"//images.ctfassets.net/tushy4jlcik7/7uo9TsqFN9EBsDBqDJ5vXl/4c58a9f94babb15d8fd996c247737656/cover_dataengineering.jpg?w=450&h=300&q=50 450w,\n//images.ctfassets.net/tushy4jlcik7/7uo9TsqFN9EBsDBqDJ5vXl/4c58a9f94babb15d8fd996c247737656/cover_dataengineering.jpg?w=900&h=600&q=50 900w,\n//images.ctfassets.net/tushy4jlcik7/7uo9TsqFN9EBsDBqDJ5vXl/4c58a9f94babb15d8fd996c247737656/cover_dataengineering.jpg?w=1600&h=1067&q=50 1600w","srcWebp":"//images.ctfassets.net/tushy4jlcik7/7uo9TsqFN9EBsDBqDJ5vXl/4c58a9f94babb15d8fd996c247737656/cover_dataengineering.jpg?w=1800&q=50&fm=webp","srcSetWebp":"//images.ctfassets.net/tushy4jlcik7/7uo9TsqFN9EBsDBqDJ5vXl/4c58a9f94babb15d8fd996c247737656/cover_dataengineering.jpg?w=450&h=300&q=50&fm=webp 450w,\n//images.ctfassets.net/tushy4jlcik7/7uo9TsqFN9EBsDBqDJ5vXl/4c58a9f94babb15d8fd996c247737656/cover_dataengineering.jpg?w=900&h=600&q=50&fm=webp 900w,\n//images.ctfassets.net/tushy4jlcik7/7uo9TsqFN9EBsDBqDJ5vXl/4c58a9f94babb15d8fd996c247737656/cover_dataengineering.jpg?w=1600&h=1067&q=50&fm=webp 1600w","sizes":"(max-width: 1800px) 100vw, 1800px"},"ogimg":{"src":"//images.ctfassets.net/tushy4jlcik7/7uo9TsqFN9EBsDBqDJ5vXl/4c58a9f94babb15d8fd996c247737656/cover_dataengineering.jpg?w=1800&fl=progressive&q=50"}},"body":{"id":"f064af50-3130-58c7-bd5e-49ce84d97e59","childMarkdownRemark":{"id":"fb7d0e8a-5f23-5f32-a248-cecdc727f5dd","timeToRead":2,"html":"<p>이 글은 평소에 <strong>Jupyter Notebook</strong> 에 익숙해져있는 분들께 유용할 듯 합니다.\nZeppelin Notebook을 설정하는 방법은 <a href=\"http://swalloow.github.io/spark-zeppelin-install\">이전 포스팅</a>을 참고하시면 됩니다.</p>\n<br>\n<h2 id=\"apache-toree\" style=\"position:relative;\"><a href=\"#apache-toree\" aria-label=\"apache toree permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Apache Toree</h2>\n<p><img src=\"/assets/images/jupyter-toree.png\" alt=\"Jupyter-Toree\"></p>\n<p><strong>Apache Toree</strong> 는 Jupyter 커널을 통해 Spark에 접속하도록 해주는 아파치 오픈소스 프로젝트입니다.\n기존의 IPython Notebook은 파이썬에 제한되어 있었지만\nJupyter Kernel을 통해 다른 언어까지 확장 가능하도록 바뀌었습니다 (왼쪽 그림 참조).</p>\n<p>여기에서 더 나아가 Apache Toree는 <strong>Toree Kernel</strong> 을 통해 바로 Spark Driver에 연결함으로써,\nJupyter에서 Scala 언어로 Spark Driver/Context를 사용할 수 있게 만들었습니다.</p>\n<p>Toree가 Zeppelin과 다른 점은 <strong>Jupyter protocol</strong> 을 사용할 수 있다는 점 입니다.\n이미 수많은 생태계가 구축되어 있는 Jupyter에서 Spark가 잘 돌아간다면 굳이 Zeppelin을 쓸 필요가 있을까요 (<em>시각화가 어마어마한 강점이긴 합니다</em>).</p>\n<p>GitHub : <a href=\"https://github.com/apache/incubator-toree\">https://github.com/apache/incubator-toree</a></p>\n<br>\n<h2 id=\"jupyter-notebook에-toree-설치하기\" style=\"position:relative;\"><a href=\"#jupyter-notebook%EC%97%90-toree-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0\" aria-label=\"jupyter notebook에 toree 설치하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Jupyter Notebook에 Toree 설치하기</h2>\n<p>Jupyter 노트북 커널 설정하는 방법은 <a href=\"http://swalloow.github.io/jupyter-notebook-kernel\">Jupyter Notebook 다중커널 설정하기</a>를,\nScala와 Spark을 설치하는 방법은 <a href=\"http://swalloow.github.io/spark-zeppelin-install\">OS X에서 Homebrew로 Spark, Zeppelin 설치하기</a>를 참고하시기 바랍니다.</p>\n<p>Toree는 아직 pre 버전만 존재하기 때문에 <code class=\"language-text\">--pre</code> 옵션을 붙여주시거나 파이썬 패키지를 통해 설치해주시면 됩니다.\n설치가 완료되면 jupyter kernel에 toree kernel을 설치해주는 과정이 필요한데 명령어를 통해 이 과정을 자동으로 진행합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ pip <span class=\"token function\">install</span> https://dist.apache.org/repos/dist/dev/incubator/toree/0.2.0/snapshots/dev1/toree-pip/toree-0.2.0.dev1.tar.gz\n$ jupyter toree <span class=\"token function\">install</span></code></pre></div>\n<p>혹시 <code class=\"language-text\">FileNotFoundError: [Errno 2] No such file or directory: &#39;/usr/local/spark/python/lib&#39;</code>\n이런 오류가 난다면, Spark 경로 환경변수를 읽지 못하는 문제입니다. <strong>Homebrew</strong> 를 통해 설치하셨다면 다음과 같이 환경변수를 등록해주시면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">SPARK_HOME</span><span class=\"token operator\">=</span>/usr/local/Cellar/apache-spark/2.1.0/libexec</code></pre></div>\n<br>\n<h2 id=\"잘-동작하는지-테스트를-해보자\" style=\"position:relative;\"><a href=\"#%EC%9E%98-%EB%8F%99%EC%9E%91%ED%95%98%EB%8A%94%EC%A7%80-%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%A5%BC-%ED%95%B4%EB%B3%B4%EC%9E%90\" aria-label=\"잘 동작하는지 테스트를 해보자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>잘 동작하는지 테스트를 해보자</h2>\n<p><img src=\"/assets/images/toree-kernel.png\" alt=\"Toree-Kernel\"></p>\n<p>잘 설치되었다면 <code class=\"language-text\">new</code> 했을 때 <code class=\"language-text\">Apache-Toree Scala</code>가 보이실 겁니다.\n잘 동작하는지 간단한 WordCounter 예제를 실행시켜 보시면 잘 동작하는 것을 확인할 수 있습니다.</p>\n<p><img src=\"/assets/images/toree-tuto.png\" alt=\"Toree-Tuto\"></p>\n<br>\n<h2 id=\"docker를-통해-jupyter-설정하는-방법\" style=\"position:relative;\"><a href=\"#docker%EB%A5%BC-%ED%86%B5%ED%95%B4-jupyter-%EC%84%A4%EC%A0%95%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"docker를 통해 jupyter 설정하는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Docker를 통해 Jupyter 설정하는 방법</h2>\n<p>나는 이 모든 것이 귀찮다! 라면 Docker를 통해 노트북을 실행시키면 됩니다.\n제가 Docker를 통해 Notebook을 사용하지 않는 이유는 딱 한 가지 입니다.\nSpark만 쓰고 싶었는데 기타 등등이 많이 설치되어 있어서 컨테이너 메모리가 무려 <strong>4기가</strong> 나 됩니다...\n그래도 쓰겠다 싶으신 분들은 아래 링크를 참고하시면 됩니다.</p>\n<p><a href=\"https://hub.docker.com/r/jupyter/all-spark-notebook/\">https://hub.docker.com/r/jupyter/all-spark-notebook/</a></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker pull jupyter/all-spark-notebook\n$ docker run -it --rm -p <span class=\"token number\">8888</span>:8888 jupyter/all-spark-notebook</code></pre></div>\n<p>이렇게 실행하고 8888번 포트로 접속하면 노트북을 실행할 수 있습니다.</p>\n<br>","excerpt":"이 글은 평소에 Jupyter Notebook 에 익숙해져있는 분들께 유용할 듯 합니다.\nZeppelin Notebook을 설정하는 방법은 이전 포스팅을 참고하시면 됩니다. Apache Toree Jupyter-Toree Apache Toree 는 Jupyter 커널을 통해 Spark에 접속하도록 해주는 아파치 오픈소스 프로젝트입니다.\n기존의 IPython Notebook은 파이썬에 제한되어 있었지만\nJupyter Kernel을 통해 다른 언어까지 확장 가능하도록 바뀌었습니다 (왼쪽 그림 참조). 여기에서 더 나아가 Apache Toree는 Toree Kernel…"}}}},"pageContext":{"slug":"jupyter-spark","basePath":"","prev":{"slug":"system-monitoring","publishDate":"2017-03-24"},"next":{"slug":"ssh-tunneling","publishDate":"2017-03-20"}}}}