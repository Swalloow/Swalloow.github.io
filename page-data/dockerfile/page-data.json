{"componentChunkName":"component---src-templates-post-js","path":"/dockerfile/","result":{"data":{"contentfulPost":{"id":"f8a15b46-cef3-5743-a515-4fa97dc12bd1","title":"파이썬을 위한 Dockerfile 작성하기","slug":"dockerfile","metaDescription":null,"publishDate":"March 27, 2017","publishDateISO":"2017-03-27","tags":[{"title":"DevOps","id":"701ee587-d6e3-5391-af93-e295765b6f45","slug":"devops"}],"heroImage":{"id":"f36c235f-3e3e-517d-bd80-697bc6183072","title":"cover-devops","fluid":{"aspectRatio":1.5,"src":"//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=1800&q=50","srcSet":"//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=450&h=300&q=50 450w,\n//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=900&h=600&q=50 900w,\n//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=1080&h=720&q=50 1080w","srcWebp":"//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=1800&q=50&fm=webp","srcSetWebp":"//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=450&h=300&q=50&fm=webp 450w,\n//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=900&h=600&q=50&fm=webp 900w,\n//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=1080&h=720&q=50&fm=webp 1080w","sizes":"(max-width: 1800px) 100vw, 1800px"},"ogimg":{"src":"//images.ctfassets.net/tushy4jlcik7/7KaSTt3mdmrYq2ZK1RiJku/dafd981ff3686217ac151b562e8b1412/cover_devops.jpg?w=1800&fl=progressive&q=50"}},"body":{"id":"e8608c91-8212-567a-9345-3d7665aec585","childMarkdownRemark":{"id":"2bb4e95f-281c-528f-b4e9-05397e7fb772","timeToRead":1,"html":"<p>Docker가 처음이라면, 이전 포스팅을 참고하시기 바랍니다.</p>\n<ul>\n<li><a href=\"https://swalloow.github.io/docker-install\">Docker 간편한 설치부터 실행까지</a></li>\n<li><a href=\"https://swalloow.github.io/docker-command\">Docker, DockerHub 명령어 정리</a></li>\n<li><a href=\"https://swalloow.github.io/dockerfile\">파이썬을 위한 Dockerfile 작성하기</a></li>\n</ul>\n<br>\n<h3 id=\"flask-application\" style=\"position:relative;\"><a href=\"#flask-application\" aria-label=\"flask application permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Flask Application</h3>\n<p>Dockerfile은 일종의 이미지 설정파일입니다. <code class=\"language-text\">build</code> 명령어를 통해 이미지를 생성할 수 있습니다.\n파이썬 웹 어플리케이션을 Docker로 실행시키는 예제를 통해 천천히 정리해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">From flask <span class=\"token keyword\">import</span> Flask\napp <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">hello_world</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Hello, world!'</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    app<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>debug<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>host<span class=\"token operator\">=</span><span class=\"token string\">'0.0.0.0'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>먼저 위와 같이 간단한 플라스크 웹 어플리케이션을 작성합니다.\n필요한 패키지는 requirements.txt로 관리합니다.\n<code class=\"language-text\">pip freeze &gt; requirements.txt</code> 명령어를 통해 파일을 생성할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Flask==0.12</code></pre></div>\n<br>\n<h3 id=\"dockerfile-작성하기\" style=\"position:relative;\"><a href=\"#dockerfile-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"dockerfile 작성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dockerfile 작성하기</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">FROM ubuntu:latest\nMAINTAINER your_name &quot;email@gmail.com&quot;\nRUN apt-get update -y\nRUN apt-get install -y python-pip python-dev build-essential\nCOPY . /app\nWORKDIR /app\nRUN pip install -r requirements.txt\nENTRYPOINT [&quot;python&quot;]\nCMD [&quot;app.py&quot;]</code></pre></div>\n<p>위와 같이 Dockerfile을 작성하시면 됩니다.\n간단히 설명하자면, ubuntu 이미지를 받아와서 파이썬 환경설정을 하고\n현재 경로에 있는 폴더를 복사해서 파이썬 패키지를 설치하고 앱을 실행시키는 이미지입니다.</p>\n<br>\n<h3 id=\"dockerfile-빌드-및-실행하기\" style=\"position:relative;\"><a href=\"#dockerfile-%EB%B9%8C%EB%93%9C-%EB%B0%8F-%EC%8B%A4%ED%96%89%ED%95%98%EA%B8%B0\" aria-label=\"dockerfile 빌드 및 실행하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dockerfile 빌드 및 실행하기</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker build -t flask-application:latest <span class=\"token builtin class-name\">.</span>\n$ docker run -d -p <span class=\"token number\">5000</span>:5000 flask-application</code></pre></div>\n<p><code class=\"language-text\">docker build [name]</code> 명령어를 통해 이미지를 빌드합니다.\n그리고 <code class=\"language-text\">docker run [image]</code> 명령어를 통해 컨테이너를 실행시킵니다.\n<code class=\"language-text\">-p</code> 옵션은 포트를 지정하며, <code class=\"language-text\">-d</code> 옵션은 백그라운드로 실행시키는 옵션입니다.\n5000번 포트를 확인해보면 플라스크 어플리케이션이 실행된 것을 확인할 수 있습니다.</p>\n<br>","excerpt":"Docker가 처음이라면, 이전 포스팅을 참고하시기 바랍니다. Docker 간편한 설치부터 실행까지 Docker, DockerHub 명령어 정리 파이썬을 위한 Dockerfile 작성하기 Flask Application Dockerfile은 일종의 이미지 설정파일입니다.  명령어를 통해 이미지를 생성할 수 있습니다.\n파이썬 웹 어플리케이션을 Docker로 실행시키는 예제를 통해 천천히 정리해보겠습니다. 먼저 위와 같이 간단한 플라스크 웹 어플리케이션을 작성합니다.\n필요한 패키지는 requirements.txt…"}}}},"pageContext":{"slug":"dockerfile","basePath":"","prev":{"slug":"dockerfile-ignore","publishDate":"2017-03-28"},"next":{"slug":"polyglot-programming","publishDate":"2017-03-25"}}}}