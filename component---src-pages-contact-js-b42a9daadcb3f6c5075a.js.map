{"version":3,"file":"component---src-pages-contact-js-b42a9daadcb3f6c5075a.js","mappings":"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","sources":["webpack://swalloow.github.io/./src/components/PageTitle.js","webpack://swalloow.github.io/./src/components/ContactForm.js","webpack://swalloow.github.io/./src/pages/contact.js"],"sourcesContent":["import React from 'react'\nimport styled from '@emotion/styled'\n\nconst Title = styled.h1`\n  font-size: ${props => (props.small ? '2em' : '3em')};\n  text-transform: capitalize;\n  font-weight: 600;\n  text-align: center;\n  margin: 0 0 3rem 0;\n  margin: ${props => (props.small ? '1rem 0 4rem 0' : '0 0 3rem 0')};\n  line-height: 1.2;\n  span {\n    margin: 0 0 0 0.25em;\n  }\n  a {\n    transition: all 0.2s;\n    color: ${props => props.theme.colors.text};\n    &:hover {\n      color: ${props => props.theme.colors.highlight};\n    }\n  }\n`\n\nconst PageTitle = props => {\n  return <Title small={props.small}>{props.children}</Title>\n}\n\nexport default PageTitle\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\n/*\n  ⚠️ This is an example of a contact form powered with Netlify form handling.\n  Be sure to review the Netlify documentation for more information:\n  https://www.netlify.com/docs/form-handling/\n*/\n\nconst Form = styled.form`\n  max-width: ${props => props.theme.sizes.maxWidthCentered};\n  margin: 0 auto;\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-between;\n  align-items: flex-start;\n  input,\n  textarea {\n    font-family: inherit;\n    font-size: inherit;\n    background: ${props => props.theme.colors.tertiary};\n    color: ${props => props.theme.colors.text};\n    border-radius: 2px;\n    padding: 1em;\n    &::-webkit-input-placeholder {\n      color: gray;\n    }\n    &::-moz-placeholder {\n      color: gray;\n    }\n    &:-ms-input-placeholder {\n      color: gray;\n    }\n    &:-moz-placeholder {\n      color: gray;\n    }\n    &:required {\n      box-shadow: none;\n    }\n  }\n  &::before {\n    content: '';\n    background: black;\n    height: 100%;\n    width: 100%;\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: 1;\n    transition: 0.2s all;\n    opacity: ${props => (props.overlay ? '.8' : '0')};\n    visibility: ${props => (props.overlay ? 'visible' : 'hidden')};\n  }\n`\n\nconst Name = styled.input`\n  margin: 0 0 1em 0;\n  width: 100%;\n  @media (min-width: ${props => props.theme.responsive.small}) {\n    width: 49%;\n  }\n`\n\nconst Email = styled.input`\n  margin: 0 0 1em 0;\n  width: 100%;\n  @media (min-width: ${props => props.theme.responsive.small}) {\n    width: 49%;\n  }\n`\n\nconst Message = styled.textarea`\n  width: 100%;\n  margin: 0 0 1em 0;\n  line-height: 1.6;\n  min-height: 250px;\n  resize: vertical;\n`\n\nconst Submit = styled.input`\n  background: ${props => props.theme.colors.text} !important;\n  color: white !important;\n  cursor: pointer;\n  transition: 0.2s;\n  &:hover {\n    background: ${props => props.theme.colors.highlight} !important;\n  }\n`\n\nconst Modal = styled.div`\n  background: white;\n  padding: 2em;\n  border-radius: 2px;\n  position: fixed;\n  min-width: 75%;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  margin: 0 auto;\n  z-index: 99;\n  display: flex;\n  flex-flow: column;\n  align-items: flex-start;\n  transition: 0.2s all;\n  opacity: ${props => (props.visible ? '1' : '0')};\n  visibility: ${props => (props.visible ? 'visible' : 'hidden')};\n  @media screen and (min-width: ${props => props.theme.responsive.small}) {\n    min-width: inherit;\n    max-width: 400px;\n  }\n  p {\n    line-height: 1.6;\n    margin: 0 0 2em 0;\n  }\n`\n\nconst Button = styled.div`\n  background: ${props => props.theme.colors.text};\n  font-size: 1em;\n  display: inline-block;\n  margin: 0 auto;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  color: white;\n  padding: 1em;\n  border-radius: 2px;\n  text-decoration: none;\n  transition: 0.2s;\n  z-index: 99;\n  &:focus {\n    outline: none;\n  }\n  &:hover {\n    background: ${props => props.theme.colors.highlight};\n  }\n`\n\nconst encode = data => {\n  return Object.keys(data)\n    .map(key => encodeURIComponent(key) + '=' + encodeURIComponent(data[key]))\n    .join('&')\n}\n\nclass ContactForm extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      name: '',\n      email: '',\n      message: '',\n      showModal: false,\n    }\n  }\n\n  handleInputChange = event => {\n    const target = event.target\n    const value = target.value\n    const name = target.name\n    this.setState({\n      [name]: value,\n    })\n  }\n\n  handleSubmit = event => {\n    fetch('/?no-cache=1', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n      body: encode({ 'form-name': 'contact', ...this.state }),\n    })\n      .then(this.handleSuccess)\n      .catch(error => alert(error))\n    event.preventDefault()\n  }\n\n  handleSuccess = () => {\n    this.setState({\n      name: '',\n      email: '',\n      message: '',\n      showModal: true,\n    })\n  }\n\n  closeModal = () => {\n    this.setState({ showModal: false })\n  }\n\n  render() {\n    return (\n      <Form\n        name=\"contact\"\n        onSubmit={this.handleSubmit}\n        data-netlify=\"true\"\n        data-netlify-honeypot=\"bot\"\n        overlay={this.state.showModal}\n        onClick={this.closeModal}\n      >\n        <input type=\"hidden\" name=\"form-name\" value=\"contact\" />\n        <p hidden>\n          <label>\n            Don’t fill this out:{' '}\n            <input name=\"bot\" onChange={this.handleInputChange} />\n          </label>\n        </p>\n\n        <Name\n          name=\"name\"\n          type=\"text\"\n          placeholder=\"Full Name\"\n          value={this.state.name}\n          onChange={this.handleInputChange}\n          required\n        />\n        <Email\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          value={this.state.email}\n          onChange={this.handleInputChange}\n          required\n        />\n        <Message\n          name=\"message\"\n          type=\"text\"\n          placeholder=\"Message\"\n          value={this.state.message}\n          onChange={this.handleInputChange}\n          required\n        />\n        <Submit name=\"submit\" type=\"submit\" value=\"Send\" />\n\n        <Modal visible={this.state.showModal}>\n          <p>\n            Thank you for reaching out. I will get back to you as soon as\n            possible.\n          </p>\n          <Button onClick={this.closeModal}>Okay</Button>\n        </Modal>\n      </Form>\n    )\n  }\n}\n\nContactForm.propTypes = {\n  data: PropTypes.object,\n}\n\nexport default ContactForm\n","import React from 'react'\nimport Layout from '../components/Layout'\nimport Container from '../components/Container'\nimport PageTitle from '../components/PageTitle'\nimport ContactForm from '../components/ContactForm'\nimport SEO from '../components/SEO'\n\nconst Contact = ({ data }) => {\n  return (\n    <Layout>\n      <SEO title=\"Contact\" description=\"Contact description goes here\" />\n      <Container>\n        <PageTitle>Contact</PageTitle>\n        <ContactForm />\n      </Container>\n    </Layout>\n  )\n}\n\nexport default Contact\n"],"names":["Title","_styled","target","props","small","theme","colors","text","highlight","___EmotionJSX","children","Form","sizes","maxWidthCentered","tertiary","overlay","Name","responsive","Email","Message","name","styles","Submit","Modal","visible","Button","_React$Component","ContactForm","_this","call","handleInputChange","event","value","setState","handleSubmit","data","fetch","method","headers","body","state","Object","keys","map","key","encodeURIComponent","join","then","handleSuccess","catch","error","alert","preventDefault","email","message","showModal","closeModal","_inheritsLoose","prototype","render","onSubmit","this","onClick","type","hidden","onChange","placeholder","required","React","_ref","Layout","SEO","title","description","Container","PageTitle"],"sourceRoot":""}